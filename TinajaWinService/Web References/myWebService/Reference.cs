//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4200
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.4200.
// 
#pragma warning disable 1591

namespace TinajaWinService.myWebService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Tinaja Remote MonitoringSoap", Namespace="http://tinajalabs.net/tinajarm")]
    public partial class TinajaRemoteMonitoring : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetFTPSlidesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCameraImageOnServerIOOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFTPFileListAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFTPFileListByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFTPFileListByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFTPFileListByStartOrigOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFTPFileListByStartOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileListFromLandingFTPOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileListFromLandingIOOperationCompleted;
        
        private System.Threading.SendOrPostCallback MoveImagesFromLandingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHelpContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHelpSubjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback ScheduledMethodsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LastTimeCameraActiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsCameraActiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback CameraActiveAlertOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback setDateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDateStringFromDateTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDateTimeFromDateStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback LeaveALogOperationCompleted;
        
        private System.Threading.SendOrPostCallback isDateBetweenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSunsetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSunriseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSunriseNowOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentImageBrightnessOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSlidesOperationCompleted;
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TinajaRemoteMonitoring() {
            this.Url = global::TinajaWinService.Properties.Settings.Default.TinajaWinService_myWebService_TinajaService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetFTPSlidesCompletedEventHandler GetFTPSlidesCompleted;
        
        /// <remarks/>
        public event SaveCameraImageOnServerIOCompletedEventHandler SaveCameraImageOnServerIOCompleted;
        
        /// <remarks/>
        public event GetFTPFileListAllCompletedEventHandler GetFTPFileListAllCompleted;
        
        /// <remarks/>
        public event GetFTPFileListByDateCompletedEventHandler GetFTPFileListByDateCompleted;
        
        /// <remarks/>
        public event GetFTPFileListByRangeCompletedEventHandler GetFTPFileListByRangeCompleted;
        
        /// <remarks/>
        public event GetFTPFileListByStartOrigCompletedEventHandler GetFTPFileListByStartOrigCompleted;
        
        /// <remarks/>
        public event GetFTPFileListByStartCompletedEventHandler GetFTPFileListByStartCompleted;
        
        /// <remarks/>
        public event GetFileListFromLandingFTPCompletedEventHandler GetFileListFromLandingFTPCompleted;
        
        /// <remarks/>
        public event GetFileListFromLandingIOCompletedEventHandler GetFileListFromLandingIOCompleted;
        
        /// <remarks/>
        public event MoveImagesFromLandingCompletedEventHandler MoveImagesFromLandingCompleted;
        
        /// <remarks/>
        public event GetHelpContentCompletedEventHandler GetHelpContentCompleted;
        
        /// <remarks/>
        public event GetHelpSubjectCompletedEventHandler GetHelpSubjectCompleted;
        
        /// <remarks/>
        public event ScheduledMethodsCompletedEventHandler ScheduledMethodsCompleted;
        
        /// <remarks/>
        public event LastTimeCameraActiveCompletedEventHandler LastTimeCameraActiveCompleted;
        
        /// <remarks/>
        public event IsCameraActiveCompletedEventHandler IsCameraActiveCompleted;
        
        /// <remarks/>
        public event CameraActiveAlertCompletedEventHandler CameraActiveAlertCompleted;
        
        /// <remarks/>
        public event SendEmailCompletedEventHandler SendEmailCompleted;
        
        /// <remarks/>
        public event setDateRangeCompletedEventHandler setDateRangeCompleted;
        
        /// <remarks/>
        public event getDateStringFromDateTimeCompletedEventHandler getDateStringFromDateTimeCompleted;
        
        /// <remarks/>
        public event getDateTimeFromDateStringCompletedEventHandler getDateTimeFromDateStringCompleted;
        
        /// <remarks/>
        public event LeaveALogCompletedEventHandler LeaveALogCompleted;
        
        /// <remarks/>
        public event isDateBetweenCompletedEventHandler isDateBetweenCompleted;
        
        /// <remarks/>
        public event GetSunsetCompletedEventHandler GetSunsetCompleted;
        
        /// <remarks/>
        public event GetSunriseCompletedEventHandler GetSunriseCompleted;
        
        /// <remarks/>
        public event GetSunriseNowCompletedEventHandler GetSunriseNowCompleted;
        
        /// <remarks/>
        public event GetCurrentImageBrightnessCompletedEventHandler GetCurrentImageBrightnessCompleted;
        
        /// <remarks/>
        public event GetSlidesCompletedEventHandler GetSlidesCompleted;
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tinajalabs.net/tinajarm/GetFTPSlides", RequestNamespace="http://tinajalabs.net/tinajarm", ResponseNamespace="http://tinajalabs.net/tinajarm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Slide[] GetFTPSlides(string contextKey) {
            object[] results = this.Invoke("GetFTPSlides", new object[] {
                        contextKey});
            return ((Slide[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFTPSlidesAsync(string contextKey) {
            this.GetFTPSlidesAsync(contextKey, null);
        }
        
        /// <remarks/>
        public void GetFTPSlidesAsync(string contextKey, object userState) {
            if ((this.GetFTPSlidesOperationCompleted == null)) {
                this.GetFTPSlidesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFTPSlidesOperationCompleted);
            }
            this.InvokeAsync("GetFTPSlides", new object[] {
                        contextKey}, this.GetFTPSlidesOperationCompleted, userState);
        }
        
        private void OnGetFTPSlidesOperationCompleted(object arg) {
            if ((this.GetFTPSlidesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFTPSlidesCompleted(this, new GetFTPSlidesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tinajalabs.net/tinajarm/SaveCameraImageOnServerIO", RequestNamespace="http://tinajalabs.net/tinajarm", ResponseNamespace="http://tinajalabs.net/tinajarm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveCameraImageOnServerIO(string fileName, string desc) {
            object[] results = this.Invoke("SaveCameraImageOnServerIO", new object[] {
                        fileName,
                        desc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveCameraImageOnServerIOAsync(string fileName, string desc) {
            this.SaveCameraImageOnServerIOAsync(fileName, desc, null);
        }
        
        /// <remarks/>
        public void SaveCameraImageOnServerIOAsync(string fileName, string desc, object userState) {
            if ((this.SaveCameraImageOnServerIOOperationCompleted == null)) {
                this.SaveCameraImageOnServerIOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCameraImageOnServerIOOperationCompleted);
            }
            this.InvokeAsync("SaveCameraImageOnServerIO", new object[] {
                        fileName,
                        desc}, this.SaveCameraImageOnServerIOOperationCompleted, userState);
        }
        
        private void OnSaveCameraImageOnServerIOOperationCompleted(object arg) {
            if ((this.SaveCameraImageOnServerIOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCameraImageOnServerIOCompleted(this, new SaveCameraImageOnServerIOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tinajalabs.net/tinajarm/GetFTPFileListAll", RequestNamespace="http://tinajalabs.net/tinajarm", ResponseNamespace="http://tinajalabs.net/tinajarm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetFTPFileListAll() {
            object[] results = this.Invoke("GetFTPFileListAll", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFTPFileListAllAsync() {
            this.GetFTPFileListAllAsync(null);
        }
        
        /// <remarks/>
        public void GetFTPFileListAllAsync(object userState) {
            if ((this.GetFTPFileListAllOperationCompleted == null)) {
                this.GetFTPFileListAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFTPFileListAllOperationCompleted);
            }
            this.InvokeAsync("GetFTPFileListAll", new object[0], this.GetFTPFileListAllOperationCompleted, userState);
        }
        
        private void OnGetFTPFileListAllOperationCompleted(object arg) {
            if ((this.GetFTPFileListAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFTPFileListAllCompleted(this, new GetFTPFileListAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tinajalabs.net/tinajarm/GetFTPFileListByDate", RequestNamespace="http://tinajalabs.net/tinajarm", ResponseNamespace="http://tinajalabs.net/tinajarm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetFTPFileListByDate(string dateString) {
            object[] results = this.Invoke("GetFTPFileListByDate", new object[] {
                        dateString});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFTPFileListByDateAsync(string dateString) {
            this.GetFTPFileListByDateAsync(dateString, null);
        }
        
        /// <remarks/>
        public void GetFTPFileListByDateAsync(string dateString, object userState) {
            if ((this.GetFTPFileListByDateOperationCompleted == null)) {
                this.GetFTPFileListByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFTPFileListByDateOperationCompleted);
            }
            this.InvokeAsync("GetFTPFileListByDate", new object[] {
                        dateString}, this.GetFTPFileListByDateOperationCompleted, userState);
        }
        
        private void OnGetFTPFileListByDateOperationCompleted(object arg) {
            if ((this.GetFTPFileListByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFTPFileListByDateCompleted(this, new GetFTPFileListByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tinajalabs.net/tinajarm/GetFTPFileListByRange", RequestNamespace="http://tinajalabs.net/tinajarm", ResponseNamespace="http://tinajalabs.net/tinajarm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetFTPFileListByRange(string StartDate, string EndDate) {
            object[] results = this.Invoke("GetFTPFileListByRange", new object[] {
                        StartDate,
                        EndDate});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFTPFileListByRangeAsync(string StartDate, string EndDate) {
            this.GetFTPFileListByRangeAsync(StartDate, EndDate, null);
        }
        
        /// <remarks/>
        public void GetFTPFileListByRangeAsync(string StartDate, string EndDate, object userState) {
            if ((this.GetFTPFileListByRangeOperationCompleted == null)) {
                this.GetFTPFileListByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFTPFileListByRangeOperationCompleted);
            }
            this.InvokeAsync("GetFTPFileListByRange", new object[] {
                        StartDate,
                        EndDate}, this.GetFTPFileListByRangeOperationCompleted, userState);
        }
        
        private void OnGetFTPFileListByRangeOperationCompleted(object arg) {
            if ((this.GetFTPFileListByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFTPFileListByRangeCompleted(this, new GetFTPFileListByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tinajalabs.net/tinajarm/GetFTPFileListByStartOrig", RequestNamespace="http://tinajalabs.net/tinajarm", ResponseNamespace="http://tinajalabs.net/tinajarm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetFTPFileListByStartOrig(string StartDate, string StartHour) {
            object[] results = this.Invoke("GetFTPFileListByStartOrig", new object[] {
                        StartDate,
                        StartHour});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFTPFileListByStartOrigAsync(string StartDate, string StartHour) {
            this.GetFTPFileListByStartOrigAsync(StartDate, StartHour, null);
        }
        
        /// <remarks/>
        public void GetFTPFileListByStartOrigAsync(string StartDate, string StartHour, object userState) {
            if ((this.GetFTPFileListByStartOrigOperationCompleted == null)) {
                this.GetFTPFileListByStartOrigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFTPFileListByStartOrigOperationCompleted);
            }
            this.InvokeAsync("GetFTPFileListByStartOrig", new object[] {
                        StartDate,
                        StartHour}, this.GetFTPFileListByStartOrigOperationCompleted, userState);
        }
        
        private void OnGetFTPFileListByStartOrigOperationCompleted(object arg) {
            if ((this.GetFTPFileListByStartOrigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFTPFileListByStartOrigCompleted(this, new GetFTPFileListByStartOrigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tinajalabs.net/tinajarm/GetFTPFileListByStart", RequestNamespace="http://tinajalabs.net/tinajarm", ResponseNamespace="http://tinajalabs.net/tinajarm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetFTPFileListByStart(string StartDate, string StartHour) {
            object[] results = this.Invoke("GetFTPFileListByStart", new object[] {
                        StartDate,
                        StartHour});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFTPFileListByStartAsync(string StartDate, string StartHour) {
            this.GetFTPFileListByStartAsync(StartDate, StartHour, null);
        }
        
        /// <remarks/>
        public void GetFTPFileListByStartAsync(string StartDate, string StartHour, object userState) {
            if ((this.GetFTPFileListByStartOperationCompleted == null)) {
                this.GetFTPFileListByStartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFTPFileListByStartOperationCompleted);
            }
            this.InvokeAsync("GetFTPFileListByStart", new object[] {
                        StartDate,
                        StartHour}, this.GetFTPFileListByStartOperationCompleted, userState);
        }
        
        private void OnGetFTPFileListByStartOperationCompleted(object arg) {
            if ((this.GetFTPFileListByStartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFTPFileListByStartCompleted(this, new GetFTPFileListByStartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tinajalabs.net/tinajarm/GetFileListFromLandingFTP", RequestNamespace="http://tinajalabs.net/tinajarm", ResponseNamespace="http://tinajalabs.net/tinajarm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetFileListFromLandingFTP() {
            object[] results = this.Invoke("GetFileListFromLandingFTP", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFileListFromLandingFTPAsync() {
            this.GetFileListFromLandingFTPAsync(null);
        }
        
        /// <remarks/>
        public void GetFileListFromLandingFTPAsync(object userState) {
            if ((this.GetFileListFromLandingFTPOperationCompleted == null)) {
                this.GetFileListFromLandingFTPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileListFromLandingFTPOperationCompleted);
            }
            this.InvokeAsync("GetFileListFromLandingFTP", new object[0], this.GetFileListFromLandingFTPOperationCompleted, userState);
        }
        
        private void OnGetFileListFromLandingFTPOperationCompleted(object arg) {
            if ((this.GetFileListFromLandingFTPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileListFromLandingFTPCompleted(this, new GetFileListFromLandingFTPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tinajalabs.net/tinajarm/GetFileListFromLandingIO", RequestNamespace="http://tinajalabs.net/tinajarm", ResponseNamespace="http://tinajalabs.net/tinajarm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetFileListFromLandingIO() {
            object[] results = this.Invoke("GetFileListFromLandingIO", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFileListFromLandingIOAsync() {
            this.GetFileListFromLandingIOAsync(null);
        }
        
        /// <remarks/>
        public void GetFileListFromLandingIOAsync(object userState) {
            if ((this.GetFileListFromLandingIOOperationCompleted == null)) {
                this.GetFileListFromLandingIOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileListFromLandingIOOperationCompleted);
            }
            this.InvokeAsync("GetFileListFromLandingIO", new object[0], this.GetFileListFromLandingIOOperationCompleted, userState);
        }
        
        private void OnGetFileListFromLandingIOOperationCompleted(object arg) {
            if ((this.GetFileListFromLandingIOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileListFromLandingIOCompleted(this, new GetFileListFromLandingIOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tinajalabs.net/tinajarm/MoveImagesFromLanding", RequestNamespace="http://tinajalabs.net/tinajarm", ResponseNamespace="http://tinajalabs.net/tinajarm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int MoveImagesFromLanding() {
            object[] results = this.Invoke("MoveImagesFromLanding", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void MoveImagesFromLandingAsync() {
            this.MoveImagesFromLandingAsync(null);
        }
        
        /// <remarks/>
        public void MoveImagesFromLandingAsync(object userState) {
            if ((this.MoveImagesFromLandingOperationCompleted == null)) {
                this.MoveImagesFromLandingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoveImagesFromLandingOperationCompleted);
            }
            this.InvokeAsync("MoveImagesFromLanding", new object[0], this.MoveImagesFromLandingOperationCompleted, userState);
        }
        
        private void OnMoveImagesFromLandingOperationCompleted(object arg) {
            if ((this.MoveImagesFromLandingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MoveImagesFromLandingCompleted(this, new MoveImagesFromLandingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tinajalabs.net/tinajarm/GetHelpContent", RequestNamespace="http://tinajalabs.net/tinajarm", ResponseNamespace="http://tinajalabs.net/tinajarm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetHelpContent(string indexkey) {
            object[] results = this.Invoke("GetHelpContent", new object[] {
                        indexkey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHelpContentAsync(string indexkey) {
            this.GetHelpContentAsync(indexkey, null);
        }
        
        /// <remarks/>
        public void GetHelpContentAsync(string indexkey, object userState) {
            if ((this.GetHelpContentOperationCompleted == null)) {
                this.GetHelpContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHelpContentOperationCompleted);
            }
            this.InvokeAsync("GetHelpContent", new object[] {
                        indexkey}, this.GetHelpContentOperationCompleted, userState);
        }
        
        private void OnGetHelpContentOperationCompleted(object arg) {
            if ((this.GetHelpContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHelpContentCompleted(this, new GetHelpContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tinajalabs.net/tinajarm/GetHelpSubject", RequestNamespace="http://tinajalabs.net/tinajarm", ResponseNamespace="http://tinajalabs.net/tinajarm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetHelpSubject(string indexkey) {
            object[] results = this.Invoke("GetHelpSubject", new object[] {
                        indexkey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHelpSubjectAsync(string indexkey) {
            this.GetHelpSubjectAsync(indexkey, null);
        }
        
        /// <remarks/>
        public void GetHelpSubjectAsync(string indexkey, object userState) {
            if ((this.GetHelpSubjectOperationCompleted == null)) {
                this.GetHelpSubjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHelpSubjectOperationCompleted);
            }
            this.InvokeAsync("GetHelpSubject", new object[] {
                        indexkey}, this.GetHelpSubjectOperationCompleted, userState);
        }
        
        private void OnGetHelpSubjectOperationCompleted(object arg) {
            if ((this.GetHelpSubjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHelpSubjectCompleted(this, new GetHelpSubjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tinajalabs.net/tinajarm/ScheduledMethods", RequestNamespace="http://tinajalabs.net/tinajarm", ResponseNamespace="http://tinajalabs.net/tinajarm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ScheduledMethods() {
            object[] results = this.Invoke("ScheduledMethods", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ScheduledMethodsAsync() {
            this.ScheduledMethodsAsync(null);
        }
        
        /// <remarks/>
        public void ScheduledMethodsAsync(object userState) {
            if ((this.ScheduledMethodsOperationCompleted == null)) {
                this.ScheduledMethodsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnScheduledMethodsOperationCompleted);
            }
            this.InvokeAsync("ScheduledMethods", new object[0], this.ScheduledMethodsOperationCompleted, userState);
        }
        
        private void OnScheduledMethodsOperationCompleted(object arg) {
            if ((this.ScheduledMethodsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ScheduledMethodsCompleted(this, new ScheduledMethodsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tinajalabs.net/tinajarm/LastTimeCameraActive", RequestNamespace="http://tinajalabs.net/tinajarm", ResponseNamespace="http://tinajalabs.net/tinajarm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime LastTimeCameraActive() {
            object[] results = this.Invoke("LastTimeCameraActive", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void LastTimeCameraActiveAsync() {
            this.LastTimeCameraActiveAsync(null);
        }
        
        /// <remarks/>
        public void LastTimeCameraActiveAsync(object userState) {
            if ((this.LastTimeCameraActiveOperationCompleted == null)) {
                this.LastTimeCameraActiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLastTimeCameraActiveOperationCompleted);
            }
            this.InvokeAsync("LastTimeCameraActive", new object[0], this.LastTimeCameraActiveOperationCompleted, userState);
        }
        
        private void OnLastTimeCameraActiveOperationCompleted(object arg) {
            if ((this.LastTimeCameraActiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LastTimeCameraActiveCompleted(this, new LastTimeCameraActiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tinajalabs.net/tinajarm/IsCameraActive", RequestNamespace="http://tinajalabs.net/tinajarm", ResponseNamespace="http://tinajalabs.net/tinajarm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsCameraActive() {
            object[] results = this.Invoke("IsCameraActive", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsCameraActiveAsync() {
            this.IsCameraActiveAsync(null);
        }
        
        /// <remarks/>
        public void IsCameraActiveAsync(object userState) {
            if ((this.IsCameraActiveOperationCompleted == null)) {
                this.IsCameraActiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsCameraActiveOperationCompleted);
            }
            this.InvokeAsync("IsCameraActive", new object[0], this.IsCameraActiveOperationCompleted, userState);
        }
        
        private void OnIsCameraActiveOperationCompleted(object arg) {
            if ((this.IsCameraActiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsCameraActiveCompleted(this, new IsCameraActiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tinajalabs.net/tinajarm/CameraActiveAlert", RequestNamespace="http://tinajalabs.net/tinajarm", ResponseNamespace="http://tinajalabs.net/tinajarm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CameraActiveAlert() {
            object[] results = this.Invoke("CameraActiveAlert", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CameraActiveAlertAsync() {
            this.CameraActiveAlertAsync(null);
        }
        
        /// <remarks/>
        public void CameraActiveAlertAsync(object userState) {
            if ((this.CameraActiveAlertOperationCompleted == null)) {
                this.CameraActiveAlertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCameraActiveAlertOperationCompleted);
            }
            this.InvokeAsync("CameraActiveAlert", new object[0], this.CameraActiveAlertOperationCompleted, userState);
        }
        
        private void OnCameraActiveAlertOperationCompleted(object arg) {
            if ((this.CameraActiveAlertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CameraActiveAlertCompleted(this, new CameraActiveAlertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tinajalabs.net/tinajarm/SendEmail", RequestNamespace="http://tinajalabs.net/tinajarm", ResponseNamespace="http://tinajalabs.net/tinajarm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendEmail(string emailRecipient, string emailRecipientName, string emailSubject, string emailBody, string apicode) {
            object[] results = this.Invoke("SendEmail", new object[] {
                        emailRecipient,
                        emailRecipientName,
                        emailSubject,
                        emailBody,
                        apicode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendEmailAsync(string emailRecipient, string emailRecipientName, string emailSubject, string emailBody, string apicode) {
            this.SendEmailAsync(emailRecipient, emailRecipientName, emailSubject, emailBody, apicode, null);
        }
        
        /// <remarks/>
        public void SendEmailAsync(string emailRecipient, string emailRecipientName, string emailSubject, string emailBody, string apicode, object userState) {
            if ((this.SendEmailOperationCompleted == null)) {
                this.SendEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEmailOperationCompleted);
            }
            this.InvokeAsync("SendEmail", new object[] {
                        emailRecipient,
                        emailRecipientName,
                        emailSubject,
                        emailBody,
                        apicode}, this.SendEmailOperationCompleted, userState);
        }
        
        private void OnSendEmailOperationCompleted(object arg) {
            if ((this.SendEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEmailCompleted(this, new SendEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tinajalabs.net/tinajarm/setDateRange", RequestNamespace="http://tinajalabs.net/tinajarm", ResponseNamespace="http://tinajalabs.net/tinajarm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setDateRange() {
            this.Invoke("setDateRange", new object[0]);
        }
        
        /// <remarks/>
        public void setDateRangeAsync() {
            this.setDateRangeAsync(null);
        }
        
        /// <remarks/>
        public void setDateRangeAsync(object userState) {
            if ((this.setDateRangeOperationCompleted == null)) {
                this.setDateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDateRangeOperationCompleted);
            }
            this.InvokeAsync("setDateRange", new object[0], this.setDateRangeOperationCompleted, userState);
        }
        
        private void OnsetDateRangeOperationCompleted(object arg) {
            if ((this.setDateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDateRangeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tinajalabs.net/tinajarm/getDateStringFromDateTime", RequestNamespace="http://tinajalabs.net/tinajarm", ResponseNamespace="http://tinajalabs.net/tinajarm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getDateStringFromDateTime(System.DateTime date) {
            object[] results = this.Invoke("getDateStringFromDateTime", new object[] {
                        date});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDateStringFromDateTimeAsync(System.DateTime date) {
            this.getDateStringFromDateTimeAsync(date, null);
        }
        
        /// <remarks/>
        public void getDateStringFromDateTimeAsync(System.DateTime date, object userState) {
            if ((this.getDateStringFromDateTimeOperationCompleted == null)) {
                this.getDateStringFromDateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDateStringFromDateTimeOperationCompleted);
            }
            this.InvokeAsync("getDateStringFromDateTime", new object[] {
                        date}, this.getDateStringFromDateTimeOperationCompleted, userState);
        }
        
        private void OngetDateStringFromDateTimeOperationCompleted(object arg) {
            if ((this.getDateStringFromDateTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDateStringFromDateTimeCompleted(this, new getDateStringFromDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tinajalabs.net/tinajarm/getDateTimeFromDateString", RequestNamespace="http://tinajalabs.net/tinajarm", ResponseNamespace="http://tinajalabs.net/tinajarm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime getDateTimeFromDateString(string dateString) {
            object[] results = this.Invoke("getDateTimeFromDateString", new object[] {
                        dateString});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void getDateTimeFromDateStringAsync(string dateString) {
            this.getDateTimeFromDateStringAsync(dateString, null);
        }
        
        /// <remarks/>
        public void getDateTimeFromDateStringAsync(string dateString, object userState) {
            if ((this.getDateTimeFromDateStringOperationCompleted == null)) {
                this.getDateTimeFromDateStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDateTimeFromDateStringOperationCompleted);
            }
            this.InvokeAsync("getDateTimeFromDateString", new object[] {
                        dateString}, this.getDateTimeFromDateStringOperationCompleted, userState);
        }
        
        private void OngetDateTimeFromDateStringOperationCompleted(object arg) {
            if ((this.getDateTimeFromDateStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDateTimeFromDateStringCompleted(this, new getDateTimeFromDateStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tinajalabs.net/tinajarm/LeaveALog", RequestNamespace="http://tinajalabs.net/tinajarm", ResponseNamespace="http://tinajalabs.net/tinajarm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime LeaveALog(string Message) {
            object[] results = this.Invoke("LeaveALog", new object[] {
                        Message});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void LeaveALogAsync(string Message) {
            this.LeaveALogAsync(Message, null);
        }
        
        /// <remarks/>
        public void LeaveALogAsync(string Message, object userState) {
            if ((this.LeaveALogOperationCompleted == null)) {
                this.LeaveALogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLeaveALogOperationCompleted);
            }
            this.InvokeAsync("LeaveALog", new object[] {
                        Message}, this.LeaveALogOperationCompleted, userState);
        }
        
        private void OnLeaveALogOperationCompleted(object arg) {
            if ((this.LeaveALogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LeaveALogCompleted(this, new LeaveALogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tinajalabs.net/tinajarm/isDateBetween", RequestNamespace="http://tinajalabs.net/tinajarm", ResponseNamespace="http://tinajalabs.net/tinajarm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool isDateBetween(System.DateTime testDate) {
            object[] results = this.Invoke("isDateBetween", new object[] {
                        testDate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isDateBetweenAsync(System.DateTime testDate) {
            this.isDateBetweenAsync(testDate, null);
        }
        
        /// <remarks/>
        public void isDateBetweenAsync(System.DateTime testDate, object userState) {
            if ((this.isDateBetweenOperationCompleted == null)) {
                this.isDateBetweenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisDateBetweenOperationCompleted);
            }
            this.InvokeAsync("isDateBetween", new object[] {
                        testDate}, this.isDateBetweenOperationCompleted, userState);
        }
        
        private void OnisDateBetweenOperationCompleted(object arg) {
            if ((this.isDateBetweenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isDateBetweenCompleted(this, new isDateBetweenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tinajalabs.net/tinajarm/GetSunset", RequestNamespace="http://tinajalabs.net/tinajarm", ResponseNamespace="http://tinajalabs.net/tinajarm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSunset(System.DateTime date) {
            object[] results = this.Invoke("GetSunset", new object[] {
                        date});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSunsetAsync(System.DateTime date) {
            this.GetSunsetAsync(date, null);
        }
        
        /// <remarks/>
        public void GetSunsetAsync(System.DateTime date, object userState) {
            if ((this.GetSunsetOperationCompleted == null)) {
                this.GetSunsetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSunsetOperationCompleted);
            }
            this.InvokeAsync("GetSunset", new object[] {
                        date}, this.GetSunsetOperationCompleted, userState);
        }
        
        private void OnGetSunsetOperationCompleted(object arg) {
            if ((this.GetSunsetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSunsetCompleted(this, new GetSunsetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tinajalabs.net/tinajarm/GetSunrise", RequestNamespace="http://tinajalabs.net/tinajarm", ResponseNamespace="http://tinajalabs.net/tinajarm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSunrise(System.DateTime date) {
            object[] results = this.Invoke("GetSunrise", new object[] {
                        date});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSunriseAsync(System.DateTime date) {
            this.GetSunriseAsync(date, null);
        }
        
        /// <remarks/>
        public void GetSunriseAsync(System.DateTime date, object userState) {
            if ((this.GetSunriseOperationCompleted == null)) {
                this.GetSunriseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSunriseOperationCompleted);
            }
            this.InvokeAsync("GetSunrise", new object[] {
                        date}, this.GetSunriseOperationCompleted, userState);
        }
        
        private void OnGetSunriseOperationCompleted(object arg) {
            if ((this.GetSunriseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSunriseCompleted(this, new GetSunriseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tinajalabs.net/tinajarm/GetSunriseNow", RequestNamespace="http://tinajalabs.net/tinajarm", ResponseNamespace="http://tinajalabs.net/tinajarm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSunriseNow() {
            object[] results = this.Invoke("GetSunriseNow", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSunriseNowAsync() {
            this.GetSunriseNowAsync(null);
        }
        
        /// <remarks/>
        public void GetSunriseNowAsync(object userState) {
            if ((this.GetSunriseNowOperationCompleted == null)) {
                this.GetSunriseNowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSunriseNowOperationCompleted);
            }
            this.InvokeAsync("GetSunriseNow", new object[0], this.GetSunriseNowOperationCompleted, userState);
        }
        
        private void OnGetSunriseNowOperationCompleted(object arg) {
            if ((this.GetSunriseNowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSunriseNowCompleted(this, new GetSunriseNowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tinajalabs.net/tinajarm/GetCurrentImageBrightness", RequestNamespace="http://tinajalabs.net/tinajarm", ResponseNamespace="http://tinajalabs.net/tinajarm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCurrentImageBrightness() {
            object[] results = this.Invoke("GetCurrentImageBrightness", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentImageBrightnessAsync() {
            this.GetCurrentImageBrightnessAsync(null);
        }
        
        /// <remarks/>
        public void GetCurrentImageBrightnessAsync(object userState) {
            if ((this.GetCurrentImageBrightnessOperationCompleted == null)) {
                this.GetCurrentImageBrightnessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentImageBrightnessOperationCompleted);
            }
            this.InvokeAsync("GetCurrentImageBrightness", new object[0], this.GetCurrentImageBrightnessOperationCompleted, userState);
        }
        
        private void OnGetCurrentImageBrightnessOperationCompleted(object arg) {
            if ((this.GetCurrentImageBrightnessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentImageBrightnessCompleted(this, new GetCurrentImageBrightnessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tinajalabs.net/tinajarm/GetSlides", RequestNamespace="http://tinajalabs.net/tinajarm", ResponseNamespace="http://tinajalabs.net/tinajarm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Slide[] GetSlides() {
            object[] results = this.Invoke("GetSlides", new object[0]);
            return ((Slide[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSlidesAsync() {
            this.GetSlidesAsync(null);
        }
        
        /// <remarks/>
        public void GetSlidesAsync(object userState) {
            if ((this.GetSlidesOperationCompleted == null)) {
                this.GetSlidesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSlidesOperationCompleted);
            }
            this.InvokeAsync("GetSlides", new object[0], this.GetSlidesOperationCompleted, userState);
        }
        
        private void OnGetSlidesOperationCompleted(object arg) {
            if ((this.GetSlidesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSlidesCompleted(this, new GetSlidesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tinajalabs.net/tinajarm/HelloWorld", RequestNamespace="http://tinajalabs.net/tinajarm", ResponseNamespace="http://tinajalabs.net/tinajarm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tinajalabs.net/tinajarm")]
    public partial class Slide {
        
        private string imagePathField;
        
        private string nameField;
        
        private string descriptionField;
        
        /// <remarks/>
        public string ImagePath {
            get {
                return this.imagePathField;
            }
            set {
                this.imagePathField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetFTPSlidesCompletedEventHandler(object sender, GetFTPSlidesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFTPSlidesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFTPSlidesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Slide[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Slide[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void SaveCameraImageOnServerIOCompletedEventHandler(object sender, SaveCameraImageOnServerIOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCameraImageOnServerIOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCameraImageOnServerIOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetFTPFileListAllCompletedEventHandler(object sender, GetFTPFileListAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFTPFileListAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFTPFileListAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetFTPFileListByDateCompletedEventHandler(object sender, GetFTPFileListByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFTPFileListByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFTPFileListByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetFTPFileListByRangeCompletedEventHandler(object sender, GetFTPFileListByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFTPFileListByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFTPFileListByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetFTPFileListByStartOrigCompletedEventHandler(object sender, GetFTPFileListByStartOrigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFTPFileListByStartOrigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFTPFileListByStartOrigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetFTPFileListByStartCompletedEventHandler(object sender, GetFTPFileListByStartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFTPFileListByStartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFTPFileListByStartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetFileListFromLandingFTPCompletedEventHandler(object sender, GetFileListFromLandingFTPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileListFromLandingFTPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileListFromLandingFTPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetFileListFromLandingIOCompletedEventHandler(object sender, GetFileListFromLandingIOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileListFromLandingIOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileListFromLandingIOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void MoveImagesFromLandingCompletedEventHandler(object sender, MoveImagesFromLandingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MoveImagesFromLandingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MoveImagesFromLandingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetHelpContentCompletedEventHandler(object sender, GetHelpContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHelpContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHelpContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetHelpSubjectCompletedEventHandler(object sender, GetHelpSubjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHelpSubjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHelpSubjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void ScheduledMethodsCompletedEventHandler(object sender, ScheduledMethodsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScheduledMethodsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ScheduledMethodsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void LastTimeCameraActiveCompletedEventHandler(object sender, LastTimeCameraActiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LastTimeCameraActiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LastTimeCameraActiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void IsCameraActiveCompletedEventHandler(object sender, IsCameraActiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsCameraActiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsCameraActiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void CameraActiveAlertCompletedEventHandler(object sender, CameraActiveAlertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CameraActiveAlertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CameraActiveAlertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void SendEmailCompletedEventHandler(object sender, SendEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void setDateRangeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void getDateStringFromDateTimeCompletedEventHandler(object sender, getDateStringFromDateTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDateStringFromDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDateStringFromDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void getDateTimeFromDateStringCompletedEventHandler(object sender, getDateTimeFromDateStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDateTimeFromDateStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDateTimeFromDateStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void LeaveALogCompletedEventHandler(object sender, LeaveALogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LeaveALogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LeaveALogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void isDateBetweenCompletedEventHandler(object sender, isDateBetweenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isDateBetweenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isDateBetweenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetSunsetCompletedEventHandler(object sender, GetSunsetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSunsetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSunsetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetSunriseCompletedEventHandler(object sender, GetSunriseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSunriseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSunriseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetSunriseNowCompletedEventHandler(object sender, GetSunriseNowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSunriseNowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSunriseNowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetCurrentImageBrightnessCompletedEventHandler(object sender, GetCurrentImageBrightnessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentImageBrightnessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentImageBrightnessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetSlidesCompletedEventHandler(object sender, GetSlidesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSlidesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSlidesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Slide[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Slide[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591